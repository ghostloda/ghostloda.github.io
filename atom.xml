<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ghostloda.github.io</id>
    <title>Loda</title>
    <updated>2020-03-05T05:40:19.392Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ghostloda.github.io"/>
    <link rel="self" href="https://ghostloda.github.io/atom.xml"/>
    <subtitle>学而不思则罔</subtitle>
    <logo>https://ghostloda.github.io/images/avatar.png</logo>
    <icon>https://ghostloda.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Loda</rights>
    <entry>
        <title type="html"><![CDATA[牢骚]]></title>
        <id>https://ghostloda.github.io/post/lao-sao/</id>
        <link href="https://ghostloda.github.io/post/lao-sao/">
        </link>
        <updated>2020-03-05T05:38:47.000Z</updated>
        <content type="html"><![CDATA[<p>Tab和空格真的是个让人头疼的问题啊！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[iris框架集成swagger]]></title>
        <id>https://ghostloda.github.io/post/iris-kuang-jia-ji-cheng-swagger/</id>
        <link href="https://ghostloda.github.io/post/iris-kuang-jia-ji-cheng-swagger/">
        </link>
        <updated>2020-03-05T02:18:56.000Z</updated>
        <content type="html"><![CDATA[<h1 id="iris集成swagger">iris集成swagger</h1>
<h3 id="手动编写or自动生成">手动编写or自动生成？</h3>
<ul>
<li>
<p>swagger editor</p>
</li>
<li>
<p>go-swagger工具根据注释生成yaml文档--&gt;swagger UI展示</p>
<h3 id="swaggo工具">swaggo工具</h3>
<ol>
<li>支持Iris框架（go-swagge使用者较多，但是目前稳定版本不支持mod）</li>
<li>不需要手动调用一遍api才能生成文档</li>
<li>解析注释。</li>
<li>引入swagger包去解析生成yml文档，进行前端显示 Swagger 格式的api信息和测试api。</li>
</ol>
</li>
</ul>
<h4 id="安装使用">安装使用：</h4>
<pre><code>$ go get -u github.com/swaggo/swag/cmd/swag
</code></pre>
<p>环境变量配置</p>
<pre><code>Path:&amp;GOPATH\bin
</code></pre>
<p>进入项目根目录，进行初始化操作，根据注释生成api文档</p>
<pre><code>$ swag init
</code></pre>
<p>引入swagger包:</p>
<pre><code>import &quot;github.com/iris-contrib/swagger&quot; // swagger middleware for Iris 
import &quot;github.com/iris-contrib/swagger/swaggerFiles&quot; // swagger embed files
</code></pre>
<pre><code>_ &quot;cloudview.NPMS.backend/docs&quot; // docs is generated by Swag CLI, you have to import it.
</code></pre>
<h4 id="示例">示例</h4>
<pre><code class="language-golang">package main

import (
    &quot;github.com/kataras/iris&quot;

    &quot;github.com/iris-contrib/swagger&quot;
    &quot;github.com/iris-contrib/swagger/swaggerFiles&quot;

    _ &quot;./docs&quot; // docs is generated by Swag CLI, you have to import it.
)

// @title Swagger Example API
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host petstore.swagger.io
// @BasePath /v2
func main() {
    app := iris.New()

    config := &amp;swagger.Config{
        URL: &quot;http://localhost:8080/swagger/doc.json&quot;, //The url pointing to API definition
    }
    // use swagger middleware to 
    app.Get(&quot;/swagger/{any:path}&quot;, swagger.CustomWrapHandler(config, swaggerFiles.Handler))

    app.Run(iris.Addr(&quot;:8080&quot;))
}
</code></pre>
<p>Run it, and browser to http://localhost:8080/swagger/index.html,</p>
<h4 id="禁用">禁用:</h4>
<pre><code class="language-golang">package main

import (
    &quot;github.com/kataras/iris&quot;

    &quot;github.com/iris-contrib/swagger&quot;
    &quot;github.com/iris-contrib/swagger/swaggerFiles&quot;

    _ &quot;./docs&quot; // docs is generated by Swag CLI, you have to import it.
)

// @title Swagger Example API
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host petstore.swagger.io
// @BasePath /v2
func main() {
    app := iris.New()

    // use swagger middleware to 
    app.Get(&quot;/swagger/{any:path}&quot;, swagger.DisablingWrapHandler(swaggerFiles.Handler, &quot;NAME_OF_ENV_VARIABLE&quot;))

    app.Run(iris.Addr(&quot;:8080&quot;))
}
</code></pre>
<h4 id="源码地址">源码地址</h4>
<p><a href="https://github.com/iris-contrib/swagger">iris-contrib</a></p>
<h4 id="注释规范">注释规范</h4>
<p>https://swaggo.github.io/swaggo.io/declarative_comments_format/</p>
<p>https://github.com/swaggo/swag</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[性能排查思路]]></title>
        <id>https://ghostloda.github.io/post/xing-neng-pai-cha-si-lu/</id>
        <link href="https://ghostloda.github.io/post/xing-neng-pai-cha-si-lu/">
        </link>
        <updated>2020-03-05T01:16:00.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://ghostloda.github.io/post-images/1583371126775.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
</feed>